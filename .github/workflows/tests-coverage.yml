name: CI (Lint, Check & Tests)

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  test_and_lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      # Clave dummy SOLO para CI/PRs (dependabot no recibe Secrets)
      DJANGO_SECRET_KEY: test-ci-key
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11", "3.12" ]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v5

      - name: Setup uv
        uses: astral-sh/setup-uv@v6

      - name: Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Prepare venv 📦
        run: |
          uv venv
          echo "$PWD/.venv/bin" >> $GITHUB_PATH
          uv pip install --upgrade pip wheel setuptools

      - name: Install deps (app + tests) 📚
        run: |
          if [ -f requirements.txt ]; then
            uv pip install -r requirements.txt
          fi
          uv pip install -r requirements-test.txt

      - name: pip-audit 🔐
        run: |
          uv pip install pip-audit
          pip-audit -r requirements.txt || true

      - name: Pre-commit ♻️
        run: |
          uv pip install pre-commit
          pre-commit run --all-files

      - name: Ruff (non-blocking) 🎨
        run: ruff check . || true

      - name: Django check ✅
        run: python manage.py check

      - name: Django deploy check 🔒
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          DJANGO_SETTINGS_MODULE: academia_project.settings_prod
        run: python manage.py check --deploy --fail-level WARNING

      - name: Pytest + Coverage 🧪
        run: pytest -q

      - name: Upload coverage.xml 📈
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
