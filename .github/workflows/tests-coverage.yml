name: CI (Lint, Check & Tests)

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  test_and_lint:
    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DJANGO_SETTINGS_MODULE: academia_project.settings_test
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11", "3.12" ]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v1

      - name: Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Prepare venv 📦
        run: |
          uv venv
          echo "$PWD/.venv/bin" >> $GITHUB_PATH
          uv pip install --upgrade pip wheel setuptools

      - name: Install deps (app + tests) 📚
        run: |
          if [ -f requirements.txt ]; then
            uv pip install -r requirements.txt
          fi
          uv pip install -r requirements-test.txt

      - name: Ruff (non-blocking) 🎨
        run: ruff check . || true

      - name: Django check ✅
        run: python manage.py check

      - name: Pytest + Coverage 🧪
        run: pytest --cov --cov-report=xml -q

      - name: Upload coverage.xml 📈
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
