# Generated by Django 5.2.5 on 2025-09-05 06:59

import academia_core.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CorePerms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "permissions": [
                    (
                        "open_close_windows",
                        "Puede abrir/cerrar ventanas de inscripción",
                    ),
                    ("enroll_self", "Puede inscribirse a sí mismo"),
                    ("enroll_others", "Puede inscribir a terceros"),
                    ("manage_correlatives", "Puede gestionar correlatividades"),
                    ("publish_grades", "Puede publicar calificaciones"),
                    (
                        "view_any_student_record",
                        "Puede ver ficha/cartón de cualquier estudiante",
                    ),
                    ("edit_student_record", "Puede editar ficha/cartón de estudiantes"),
                    ("view_inscripcioncarrera", "Puede ver inscripciones a carrera"),
                    ("add_inscripcioncarrera", "Puede crear inscripciones a carrera"),
                    (
                        "change_inscripcioncarrera",
                        "Puede editar inscripciones a carrera",
                    ),
                ],
                "managed": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="Aula",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=100, unique=True)),
                ("capacidad", models.PositiveIntegerField(blank=True, null=True)),
                ("observaciones", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Aula",
                "verbose_name_plural": "Aulas",
            },
        ),
        migrations.CreateModel(
            name="Carrera",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=255, unique=True)),
                ("abreviatura", models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Condicion",
            fields=[
                (
                    "codigo",
                    models.CharField(
                        help_text="Código único, ej: 'REGULAR', 'PROMOCION'",
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre para mostrar, ej: 'Regular', 'Promoción'",
                        max_length=100,
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("REG", "Cursada"), ("FIN", "Final")], max_length=3
                    ),
                ),
            ],
            options={
                "verbose_name": "Condición Académica",
                "verbose_name_plural": "Condiciones Académicas",
            },
        ),
        migrations.CreateModel(
            name="Docente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dni", models.CharField(max_length=20, unique=True)),
                ("apellido", models.CharField(max_length=120)),
                ("nombre", models.CharField(max_length=120)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("activo", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="EspacioCurricular",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("anio", models.CharField(max_length=10)),
                (
                    "cuatrimestre",
                    models.CharField(
                        choices=[
                            ("1", "1º Cuatr."),
                            ("2", "2º Cuatr."),
                            ("A", "Anual"),
                        ],
                        max_length=1,
                    ),
                ),
                ("horas", models.PositiveIntegerField(default=0)),
                ("formato", models.CharField(blank=True, max_length=80)),
                (
                    "libre_habilitado",
                    models.BooleanField(
                        default=False, help_text="Permite rendir en condición de Libre"
                    ),
                ),
            ],
            options={
                "ordering": [
                    "plan__carrera__nombre",
                    "anio",
                    "cuatrimestre",
                    "materia__nombre",
                ],
            },
        ),
        migrations.CreateModel(
            name="Estudiante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dni", models.CharField(max_length=20, unique=True)),
                ("apellido", models.CharField(max_length=120)),
                ("nombre", models.CharField(max_length=120)),
                ("fecha_nacimiento", models.DateField(blank=True, null=True)),
                ("lugar_nacimiento", models.CharField(blank=True, max_length=120)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("telefono", models.CharField(blank=True, max_length=50)),
                ("localidad", models.CharField(blank=True, max_length=120)),
                ("activo", models.BooleanField(default=True)),
                (
                    "foto",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=academia_core.models.estudiante_foto_path,
                    ),
                ),
                (
                    "contacto_emergencia_tel",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Tel. de emergencia",
                    ),
                ),
                (
                    "contacto_emergencia_parentesco",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Parentesco (emergencia)",
                    ),
                ),
            ],
            options={
                "ordering": ["apellido", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="Materia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="Actividad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rol_cache", models.CharField(blank=True, max_length=20)),
                (
                    "accion",
                    models.CharField(
                        choices=[
                            ("MOV_ALTA", "Carga de movimiento"),
                            ("INSC_PROF", "Inscripción a profesorado"),
                            ("INSC_ESP", "Inscripción a materia"),
                            ("LOGIN", "Ingreso"),
                            ("LOGOUT", "Salida"),
                        ],
                        max_length=20,
                    ),
                ),
                ("detalle", models.TextField(blank=True)),
                ("creado", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="actividades",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-creado"],
            },
        ),
        migrations.CreateModel(
            name="DocenteEspacio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("desde", models.DateField(blank=True, null=True)),
                ("hasta", models.DateField(blank=True, null=True)),
                (
                    "docente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asignaciones",
                        to="academia_core.docente",
                    ),
                ),
                (
                    "espacio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asignaciones_docentes",
                        to="academia_core.espaciocurricular",
                    ),
                ),
            ],
            options={
                "unique_together": {("docente", "espacio")},
            },
        ),
        migrations.AddField(
            model_name="docente",
            name="espacios",
            field=models.ManyToManyField(
                blank=True,
                related_name="docentes",
                through="academia_core.DocenteEspacio",
                to="academia_core.espaciocurricular",
            ),
        ),
        migrations.CreateModel(
            name="EstudianteProfesorado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cohorte", models.PositiveSmallIntegerField(default=2025)),
                (
                    "libreta",
                    models.CharField(
                        blank=True, default="", max_length=50, verbose_name="Libreta"
                    ),
                ),
                (
                    "curso_introductorio",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Aprobado", "Aprobado"),
                            ("Desaprobado", "Desaprobado"),
                            ("En curso", "En curso"),
                            ("No aplica", "No aplica"),
                        ],
                        max_length=20,
                    ),
                ),
                ("legajo_entregado", models.BooleanField(default=False)),
                (
                    "libreta_entregada",
                    models.BooleanField(
                        default=False, verbose_name="Libreta entregada"
                    ),
                ),
                ("doc_dni_legalizado", models.BooleanField(default=False)),
                ("doc_titulo_sec_legalizado", models.BooleanField(default=False)),
                ("doc_cert_medico", models.BooleanField(default=False)),
                (
                    "doc_fotos_carnet",
                    models.BooleanField(default=False, verbose_name="Fotos carnet"),
                ),
                (
                    "doc_folios_oficio",
                    models.BooleanField(default=False, verbose_name="Folios oficio"),
                ),
                (
                    "doc_titulo_terciario_legalizado",
                    models.BooleanField(
                        default=False,
                        verbose_name="Doc título terciario/universitario legalizado",
                    ),
                ),
                (
                    "doc_incumbencias",
                    models.BooleanField(
                        default=False, verbose_name="Incumbencias presentadas"
                    ),
                ),
                ("nota_compromiso", models.BooleanField(default=False)),
                ("adeuda_materias", models.BooleanField(default=False)),
                ("adeuda_detalle", models.TextField(blank=True)),
                ("colegio", models.CharField(blank=True, max_length=120)),
                (
                    "titulo_en_tramite",
                    models.BooleanField(
                        default=False, verbose_name="Título en trámite"
                    ),
                ),
                (
                    "materias_adeudadas",
                    models.TextField(
                        blank=True, default="", verbose_name="Materias adeudadas"
                    ),
                ),
                (
                    "institucion_origen",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=200,
                        verbose_name="Escuela / Institución",
                    ),
                ),
                (
                    "legajo_estado",
                    models.CharField(
                        choices=[
                            ("COMPLETO", "Completo"),
                            ("INCOMPLETO", "Incompleto"),
                        ],
                        default="INCOMPLETO",
                        max_length=20,
                        verbose_name="Legajo estado",
                    ),
                ),
                (
                    "condicion_admin",
                    models.CharField(
                        choices=[
                            ("REGULAR", "Regular"),
                            ("CONDICIONAL", "Condicional"),
                        ],
                        default="CONDICIONAL",
                        max_length=20,
                        verbose_name="Condición administrativa",
                    ),
                ),
                (
                    "promedio_general",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                ("legajo", models.CharField(blank=True, max_length=50)),
                (
                    "carrera",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inscripciones",
                        to="academia_core.carrera",
                    ),
                ),
                (
                    "estudiante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inscripciones_carrera",
                        to="academia_core.estudiante",
                    ),
                ),
            ],
            options={
                "ordering": [
                    "estudiante__apellido",
                    "estudiante__nombre",
                    "carrera__nombre",
                ],
            },
        ),
        migrations.CreateModel(
            name="InscripcionCarrera",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cohorte", models.PositiveSmallIntegerField()),
                ("turno", models.CharField(blank=True, max_length=20)),
                ("fecha_inscripcion", models.DateField(auto_now_add=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("confirmada", "Confirmada"),
                            ("baja", "Baja"),
                        ],
                        default="pendiente",
                        max_length=12,
                    ),
                ),
                (
                    "carrera",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="academia_core.carrera",
                    ),
                ),
                (
                    "estudiante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academia_core.estudiante",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InscripcionEspacio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("anio_academico", models.PositiveIntegerField()),
                ("fecha_inscripcion", models.DateField(auto_now_add=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[("EN_CURSO", "En curso"), ("BAJA", "Baja")],
                        default="EN_CURSO",
                        max_length=10,
                    ),
                ),
                ("fecha_baja", models.DateField(blank=True, null=True)),
                ("motivo_baja", models.TextField(blank=True, default="")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "espacio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cursadas",
                        to="academia_core.espaciocurricular",
                    ),
                ),
                (
                    "inscripcion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cursadas",
                        to="academia_core.estudianteprofesorado",
                    ),
                ),
            ],
            options={
                "ordering": [
                    "espacio__plan__carrera__nombre",
                    "espacio__anio",
                    "espacio__cuatrimestre",
                    "espacio__materia__nombre",
                ],
            },
        ),
        migrations.CreateModel(
            name="InscripcionEspacioEstadoLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("estado", models.CharField(max_length=20)),
                ("fecha", models.DateTimeField(auto_now_add=True)),
                ("nota", models.TextField(blank=True, default="")),
                (
                    "insc_espacio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="estado_logs",
                        to="academia_core.inscripcionespacio",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-fecha"],
            },
        ),
        migrations.CreateModel(
            name="InscripcionFinal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha_examen", models.DateField()),
                ("creado", models.DateTimeField(auto_now_add=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("INSCRIPTO", "Inscripto"),
                            ("APROBADO", "Aprobado"),
                            ("DESAPROBADO", "Desaprobado"),
                            ("AUSENTE", "Ausente"),
                        ],
                        default="INSCRIPTO",
                        max_length=12,
                    ),
                ),
                (
                    "nota_final",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("ausente", models.BooleanField(default=False)),
                ("ausencia_justificada", models.BooleanField(default=False)),
                (
                    "inscripcion_cursada",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="finales",
                        to="academia_core.inscripcionespacio",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inscripción a Mesa Final",
                "verbose_name_plural": "Inscripciones a Mesas Finales",
                "ordering": ["-creado"],
            },
        ),
        migrations.CreateModel(
            name="InscripcionMateria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comision", models.CharField(blank=True, max_length=50)),
                ("fecha_inscripcion", models.DateField(auto_now_add=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("confirmada", "Confirmada"),
                            ("baja", "Baja"),
                        ],
                        default="pendiente",
                        max_length=12,
                    ),
                ),
                (
                    "estudiante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academia_core.estudiante",
                    ),
                ),
                (
                    "materia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="academia_core.materia",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="espaciocurricular",
            name="materia",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="en_planes",
                to="academia_core.materia",
            ),
        ),
        migrations.CreateModel(
            name="Mesa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fecha", models.DateField()),
                ("turno", models.CharField(blank=True, max_length=20)),
                (
                    "materia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mesas",
                        to="academia_core.materia",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InscripcionMesa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("condicion", models.CharField(blank=True, max_length=20)),
                ("llamada", models.CharField(blank=True, max_length=20)),
                ("fecha_inscripcion", models.DateField(auto_now_add=True)),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("pendiente", "Pendiente"),
                            ("confirmada", "Confirmada"),
                            ("baja", "Baja"),
                        ],
                        default="pendiente",
                        max_length=12,
                    ),
                ),
                (
                    "estudiante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academia_core.estudiante",
                    ),
                ),
                (
                    "mesa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="academia_core.mesa",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Movimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("REG", "Regularidad"), ("FIN", "Final")], max_length=3
                    ),
                ),
                ("fecha", models.DateField(blank=True, null=True)),
                (
                    "nota_num",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=4, null=True
                    ),
                ),
                ("nota_texto", models.CharField(blank=True, max_length=40)),
                ("folio", models.CharField(blank=True, max_length=20)),
                ("libro", models.CharField(blank=True, max_length=20)),
                ("disposicion_interna", models.CharField(blank=True, max_length=120)),
                ("ausente", models.BooleanField(default=False)),
                ("ausencia_justificada", models.BooleanField(default=False)),
                ("creado", models.DateTimeField(auto_now_add=True)),
                (
                    "condicion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="movimientos",
                        to="academia_core.condicion",
                        verbose_name="Condición",
                    ),
                ),
                (
                    "espacio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movimientos",
                        to="academia_core.espaciocurricular",
                    ),
                ),
                (
                    "inscripcion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movimientos",
                        to="academia_core.estudianteprofesorado",
                    ),
                ),
            ],
            options={
                "ordering": ["-fecha", "-creado"],
            },
        ),
        migrations.CreateModel(
            name="PlanEstudios",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("resolucion", models.CharField(max_length=30)),
                (
                    "resolucion_slug",
                    models.SlugField(blank=True, max_length=100, null=True),
                ),
                ("nombre", models.CharField(blank=True, max_length=120)),
                ("vigente", models.BooleanField(default=True)),
                ("observaciones", models.TextField(blank=True)),
                (
                    "carrera",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="planes",
                        to="academia_core.carrera",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="estudianteprofesorado",
            name="plan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="inscripciones",
                to="academia_core.planestudios",
            ),
        ),
        migrations.AddField(
            model_name="espaciocurricular",
            name="plan",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="espacios",
                to="academia_core.planestudios",
            ),
        ),
        migrations.CreateModel(
            name="Correlatividad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("CURSAR", "Para cursar"), ("RENDIR", "Para rendir")],
                        max_length=10,
                    ),
                ),
                (
                    "requisito",
                    models.CharField(
                        choices=[
                            ("REGULARIZADA", "Regularizada"),
                            ("APROBADA", "Aprobada"),
                        ],
                        max_length=14,
                    ),
                ),
                (
                    "requiere_todos_hasta_anio",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ("observaciones", models.CharField(blank=True, max_length=200)),
                (
                    "espacio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="correlativas_de",
                        to="academia_core.espaciocurricular",
                    ),
                ),
                (
                    "requiere_espacio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="correlativas_requeridas",
                        to="academia_core.espaciocurricular",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="correlatividades",
                        to="academia_core.planestudios",
                    ),
                ),
            ],
            options={
                "ordering": [
                    "espacio__plan__carrera__nombre",
                    "espacio__anio",
                    "espacio__cuatrimestre",
                    "espacio__materia__nombre",
                ],
            },
        ),
        migrations.AddField(
            model_name="carrera",
            name="plan_vigente",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="academia_core.planestudios",
            ),
        ),
        migrations.CreateModel(
            name="RequisitosIngreso",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("req_dni", models.BooleanField(default=False)),
                ("req_cert_med", models.BooleanField(default=False)),
                ("req_fotos", models.BooleanField(default=False)),
                ("req_folios", models.BooleanField(default=False)),
                ("req_titulo_sec", models.BooleanField(default=False)),
                ("req_titulo_tramite", models.BooleanField(default=False)),
                ("req_adeuda", models.BooleanField(default=False)),
                ("req_adeuda_mats", models.CharField(blank=True, max_length=255)),
                ("req_adeuda_inst", models.CharField(blank=True, max_length=255)),
                ("req_titulo_sup", models.BooleanField(default=False)),
                ("req_incumbencias", models.BooleanField(default=False)),
                ("req_condicion", models.BooleanField(default=False)),
                ("creado", models.DateTimeField(auto_now_add=True)),
                (
                    "inscripcion",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requisitos",
                        to="academia_core.estudianteprofesorado",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        choices=[
                            ("ESTUDIANTE", "Estudiante"),
                            ("DOCENTE", "Docente"),
                            ("BEDEL", "Bedelía"),
                            ("TUTOR", "Tutor"),
                            ("SECRETARIA", "Secretaría"),
                        ],
                        default="ESTUDIANTE",
                        max_length=20,
                    ),
                ),
                (
                    "carreras_permitidas",
                    models.ManyToManyField(
                        blank=True,
                        related_name="usuarios_habilitados",
                        to="academia_core.carrera",
                    ),
                ),
                (
                    "docente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="usuarios",
                        to="academia_core.docente",
                    ),
                ),
                (
                    "estudiante",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="usuarios",
                        to="academia_core.estudiante",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="perfil",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EspacioCondicion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "condicion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academia_core.condicion",
                    ),
                ),
                (
                    "espacio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="academia_core.espaciocurricular",
                    ),
                ),
            ],
            options={
                "verbose_name": "Condición por Espacio",
                "verbose_name_plural": "Condiciones por Espacio",
                "unique_together": {("espacio", "condicion")},
            },
        ),
        migrations.AddIndex(
            model_name="inscripcionespacio",
            index=models.Index(
                fields=["inscripcion", "anio_academico"], name="idx_cursada_insc_anio"
            ),
        ),
        migrations.AddConstraint(
            model_name="inscripcionespacio",
            constraint=models.UniqueConstraint(
                fields=("inscripcion", "espacio", "anio_academico"),
                name="uniq_insc_est_esp_ciclo",
            ),
        ),
        migrations.AddConstraint(
            model_name="inscripcionespacio",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("estado", "EN_CURSO"), _negated=True),
                    ("fecha_baja__isnull", True),
                    _connector="OR",
                ),
                name="cursada_fecha_null_si_en_curso",
            ),
        ),
        migrations.AddConstraint(
            model_name="inscripcionespacio",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    models.Q(("estado", "BAJA"), ("fecha_baja__isnull", False)),
                    models.Q(("estado", "BAJA"), _negated=True),
                    _connector="OR",
                ),
                name="cursada_fecha_baja_si_baja",
            ),
        ),
        migrations.AddConstraint(
            model_name="inscripcionespacio",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("fecha_baja__gte", models.F("fecha_inscripcion")),
                    ("fecha_baja__isnull", True),
                    _connector="OR",
                ),
                name="cursada_fecha_baja_ge_inscripcion",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inscripcionfinal",
            unique_together={("inscripcion_cursada", "fecha_examen")},
        ),
        migrations.AddConstraint(
            model_name="movimiento",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("nota_num__isnull", True),
                    models.Q(("nota_num__gte", 0), ("nota_num__lte", 10)),
                    _connector="OR",
                ),
                name="nota_num_rango_valido",
            ),
        ),
        migrations.AddConstraint(
            model_name="planestudios",
            constraint=models.UniqueConstraint(
                condition=models.Q(("vigente", True)),
                fields=("carrera",),
                name="unique_plan_vigente_por_carrera",
            ),
        ),
        migrations.AddConstraint(
            model_name="planestudios",
            constraint=models.UniqueConstraint(
                fields=("carrera", "resolucion"), name="unique_resolucion_por_carrera"
            ),
        ),
        migrations.AddConstraint(
            model_name="estudianteprofesorado",
            constraint=models.UniqueConstraint(
                fields=("estudiante", "plan"), name="uniq_estudiante_plan"
            ),
        ),
        migrations.AddConstraint(
            model_name="espaciocurricular",
            constraint=models.UniqueConstraint(
                fields=("plan", "materia", "anio", "cuatrimestre"),
                name="uniq_espacio_en_plan",
            ),
        ),
    ]
